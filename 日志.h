//
//  日志.h
//  MyWeibo
//
//  Created by zsm on 14-9-24.
//  Copyright (c) 2014年 zsm. All rights reserved.
//
/*
第一天内容：（框架搭建，自定义导航栏和标签栏）
1.创建pch文件并关联到工程里面(prefix header 里面添加pch文件名字)
2.导入第三方类库，标识不支持ARC的文件
3.使用故事版搭建框架，创建控制器的时候需要通过故事版创建
4.自定义导航栏（适配图片问题）
5.定义标签栏（图片大小的问题）
6.集成新浪微博的SDK（1.导入文件2.设置应用程序的ID 3.定义我们自己的key和回调页面 4.在AppDelegate里面copy代码 5.最后在more里面实现）
 
 
第二天内容：（主题切换）
1.视图部分，在更多页面提供主题选择按钮，提供主题页面
2.切换主题功能
    01.点击主题按钮（保存主题到本地；告诉主题管家当前主题改变了；发送通知；刷新单元格显示当前选中的主题）
    02.主题管家类：管理当前应用主题的（属性1当前主题名字和主题路径的配置字典；属性2保存当前主题的名字；自定义方法通过图片的名字反馈当前主题下的图片对象；设计成单例对象）
    03.子类化图片视图：因为UIImageView没有办法在内部注册通知（定义初始化方法，在创建的时候注册通知，在销毁的时候移除通知；收到通知时候刷新当前视图的图片；）
    04.设置导航栏的主题切换，在导航控制器里面注册通知
    05.创建themeButton控件来切换所有按钮的主题类
    06.为了创建主题视图方便，封装了ThemeControl类，在这个类里面就是创建视图和按钮用的
    07.标签控制器的标签栏比较特殊，在我们这个项目里给标签栏添加了一个通知,切换标签栏的背景图片
    08.主题颜色的配置：（每个主题下都有一个配置文件，配置文件里面记录颜色）
    09.MMDrawer视图滑动时漏出window,左右视图控制器的根视图都是透明的，在window上添加一个背景图片
    10.自定义在MMDrawerController上添加左右导航按钮，实现按钮打开滑动视图
 
 
第三天内容：（完善MMDrawerController的滑动控制，抽屉式导航效果）
//1.子类化左侧的导航按钮，完善了事件
//2.滑动MMDrawerController的时候实现了右侧按钮的旋转效果:使用了KVO实现的
//3.隐藏自定义的左右导航按钮:(1.首先在rootVC里面实现了隐藏和现实的方法，2.给rootVC设计成单例模式，3.在导航控制器里面实现了协议方法，通过导航控制器控制器导航按钮的显示和隐藏)
4.实现了左右视图控制器的界面效果
5.实现了左侧控制器的MMDrawerController自定义动画切换效果:(1.在MMDrawerController内部设置block的回调 2.使用MMExampleDrawerVisualStateManager实现了本地保存 3.滑动效果有问题，我们给去掉了， 4.把rootVC改成非arc)
 
6.默认背景视图：在baseViewController添加一个主题背景视图，不需要的视图控制器，remove掉
7.抽屉式导航：1.子类化导航栏（重写导航兰的导航动画事件）2.重写push实现自定义动画效果 3.重写动画事件现实自定义返回动画 4.添加手势(手势只有pop动画，在根视图控制器里面需要禁用动画效果)
 
第四天内容：（请求微博借口数据）
1.使用MKNetworkKit:需要导入三个系统类库，在xcode6里面需要使用.pch要不然报错，需要导入系统类库
2.测试借口，根据借口说明去测试接口
3.使用MKNetworkKit不能自定义请求类型（MKNetworkKit默认在Url前面添加http://），如果想使用https://需要添加证书
4.测试成功后，把网络请求进行自定封装（WXDataService类）
5.在首页进行网络请求，请求过程中需要使用微博的认证，添加了一个判断:
    01 判断当前是否是登陆状态，可根据网络请求的MKNetworkOperation判断当前是否是登陆状态
    02 如果是为登陆，打开登陆页面，登陆之后还需要重新请求该网络
 
 最新：
 1.自定网络请求(DataService)使用AFNetworking封装
 2.在首页进行登陆，测试借口
 3.封装model对象，weiboModel和userModel
 4.获取微博列表数据之后转换成数据原型对象
 *****
 5.在我们首次请求的时候有可能为登陆，那么我们就无法请求网络（AFHTTPRequestOperation == nil）证明是因为为登陆引起的网络请求失败
    01 设置当前对象为AppDelegate登陆的代理对象
    02 调用认证页面
    03 登陆成功调用weiboSDKDeleget的登陆成功的协议方法
    04 协议方法我们写在AppDelegate里面，执行下面操作：保存登陆信息、同步到本地、继续刚才为完成的请求
    05 跟多页面里面的注销登陆

 
 
 
第五天内容：（微博列表和微博大小图现实）
1.微博列表视图 微博内容现实，高度计算
2.微博大小图实现：
  01 先实现左侧视图的样式，当前选中大小视图位置
  02 当切换大小图样式的时候，把切换的样式保存到本地，刷新表视图，发送通知
  03 给weiboTableView 注册监听控制器，调用reloadData
  04 把之前微博内容图片的大小变成动态的，根本地图片的样式设置图片的大小
3.点击图片放大
 
第六天内容：（首页完善）
1.下拉刷新（MJRefresh 在Xcode6.0以后需要更改编译器的设置）
2.在表视图上添加下拉刷新，开始请求最新的微博，根据API文档，添加请求参数since_id
3.在表视图上添加上拉加载更多，请求更多的数据，添加请求参数max_id,请求下来的数据会最后一条数据重复，所以去要删除重复的数据在拼接（加载更多数据也就是所谓的翻页效果，需要服务器设计好）
4.图片放大的GUB，因为服用的关系，每次都把_allData清除
5.为读微博数提示，在标签控制器里请求为读消息接口，如果有为读消息需要显示在标签栏上，uid是接口的必须参数，所以在认证后保存userId（和令牌一样做了缓冲处理）
6.每次进入控制器时，如果有未读消息，让表示图自动下拉刷新
7.MKNetWorkKit在真机里面有个BUG（当前网络状态改变的一个通知引起的）
8.首次加载首页的时候隐藏表示图并现实HUD提示框，如加载完成显示表视图，关闭HUD，如果网络请求失败从新加载网络
// 表情
1.WXLabel 默认表达式@"<image url = '[a-zA-Z0-9_\\.@%&\\S]*'>"
你好[呵呵]
你好<image url = '呵呵.png'>
 
 
第七天内容：
1.点击单元格跳转到微博详情页面微博详情（1.在点击事件里面获取当前视图所在的导航控制器，2.微博详情需要像是微博列表的数据）
2.当导航到二级控制器的时候需要隐藏标签栏。
3.通过XIB文件创建微博详情的头视图，
4.创建微博内容视图添加到头视图上，微博内容视图的字体大小有所不同，所以在微博视图中添加了一个isDetail属性，来控制字体的大小
作业内容：
5.现实评论列表，评论列表需要自定义项目一里面的拿过来，评论内容用图文混排去现实，添加上上啦加载更多
6.完成个人中心页面
    01 按钮需要自定义有两个Label
    02 请求用户数据API:@"2/users/show.json" 参数：uid 或者screen_name 必选其一
    03 在个人中心页面里面：使用uid,在本地缓存我们存有uid
    04 当我们点击关注活或者粉丝现实，所有粉丝或者关注列表
    05 创建现实粉丝或者关注控制器时候我们需要判断当前点击的时候粉丝还是关注，在控制器中创建一个枚举类型（包括粉丝或者关注），根据该属性去请求对应的接口
    06 关注接口：@“2/friendships/friends.json” 参数：uid 或者screen_name 必选其一
    07 粉丝接口：@“2/friendships/followers.json” 参数：uid 或者screen_name 必选其一
    08 当前点击用户粉丝item的时候，需要跳转到用户的详情页面，就可以把当前用户的UserModel传个控制器去显示，（和之前的个人中心对像做一个判断 ，判断UserModel是否有值，如果有值就现实userModel,如果没有值就请求数据）
7.修改微博列表里面头像视图,点击头像视图的时候需要挑战到个人中心页面
8.微博的超链接事件：有三种：@，http://,#
    01 @用户的时候需要跳转到当前用的个人中心，传用户的screen_name;
    02 http://请求网络
 
第八天内容：
1.在ios兼容问题http://www.cocoachina.com/bbs/read.php?tid=217107
2.在ios8.0定位服务发生了改变，添加一个方法和在配置文件里面添加一个KEY
3.获取当前位置之后，停止定位服务，添加用户自身位置的标注视图，
4.拿到当前的位置开始请求网络，参数有经纬度，条数，还有搜索范围等，
5.网络请求获取数据之后，开始获取所有微博并转换成数据原型对象，定义标注视图的数据原型对象，并把微博model赋值给标注视图数据原型对象，添加到地图上
6.自定义标注视图对象，标注视图的大小，根据你赋值的image有关，标注视图分为两种，根据微博的内容去设置子视图的隐藏和位置
7.点击标注视图跳转到微博详情页面
8.标注视图的动画效果设置，在标注视图现实的时候调用的协议方法里面去设置UIView的属性动画
 
第九天内容：（发送微博）
1.打开发送微博控制器（通过模态视图弹出的一个导航控制器，有两个当行按钮，返回和发送）
2.视图的组成部分
    01.发送为本视图textView
    02.面板视图（五个选择按钮，位置信息视图 ，上传图片视图）
    03.键盘
3.autolayout两种代码使用方式
4.让视图适应键盘的大小，键盘发生改变会发送一个通知，在通知中可以回去键盘的动画时间，大小，还有加速方式等
5.上传微博图片的功能按钮实现了
6.上传当前位置
 
 */

